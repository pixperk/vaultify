// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Yashaswi Kumar Mishra",
            "email": "mishrayashaswikumar@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Verify credentials and return access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.loginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/secrets": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Encrypts and stores a secret with optional TTL, linked to the authenticated user. The encrypted secret is signed with an HMAC signature to ensure integrity and prevent tampering.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Create a new secret",
                "parameters": [
                    {
                        "description": "Secret creation request",
                        "name": "secret",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.secretResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sign-up": {
            "post": {
                "description": "Create a new user with hashed password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/secrets/{path}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches and decrypts the secret. If version is not specified, retrieves the latest. Verifies HMAC to ensure integrity.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Retrieve a secret by path and optional version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Secret version (optional)",
                        "name": "version",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getSecretResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or HMAC verification failed",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Secret not found",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Encrypts new secret value, verifies existing HMAC to prevent tampering, then creates a new secret version signed with a fresh HMAC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Update an existing secret by creating a new version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New secret value",
                        "name": "updateSecretRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.updateSecretResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or HMAC verification failed",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/secrets/{path}/rollback": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reverts a secret to a previous version by duplicating the selected version with a new version number. Verifies HMAC before proceeding.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Secrets"
                ],
                "summary": "Rollback secret to a previous version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rollback secret request payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.rollbackSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.rollbackSecretResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or bad version",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized: invalid HMAC or missing token",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Secret version not found",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during rollback",
                        "schema": {
                            "$ref": "#/definitions/api.swaggerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.createSecretRequest": {
            "type": "object",
            "required": [
                "path",
                "value"
            ],
            "properties": {
                "path": {
                    "type": "string"
                },
                "ttl_seconds": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "api.createUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.getSecretResponse": {
            "type": "object",
            "properties": {
                "decrypted_value": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "api.loginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "api.loginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.userResponse"
                }
            }
        },
        "api.rollbackSecretRequest": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "type": "integer"
                }
            }
        },
        "api.rollbackSecretResponse": {
            "type": "object",
            "properties": {
                "encrypted_value": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "existing_version": {
                    "type": "integer"
                },
                "new_version": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "path": {
                    "type": "string"
                },
                "to_version": {
                    "type": "integer"
                }
            }
        },
        "api.secretResponse": {
            "type": "object",
            "properties": {
                "encrypted_value": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "nonce": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "api.swaggerErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.updateSecretRequest": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "api.updateSecretResponse": {
            "type": "object",
            "properties": {
                "encrypted_value": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "nonce": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "path": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "api.userResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9090",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Vaultify API",
	Description:      "Secure secret management system in Go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
